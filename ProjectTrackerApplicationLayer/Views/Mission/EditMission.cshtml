@using ProjectTrackerBusinessLayer.Entities;
@using ProjectTrackerApplicationLayer.DTO;
@model Mission
@{
	ViewData["Title"] = "Edit Mission";
}
<br />
<h2 class="text-center">Edit Mission Form</h2>
<br />
<h4 class="text-center">Mission: @Model.Sprint.Name</h4>
<br />
<div class="container">
	<div class="row">
		<div class="col-2"></div>
		<div class="col-6" style="margin-bottom:-25px">
			<p>Start date: @Model.Sprint.StartDate <br />   End Date: @Model.Sprint.EndDate</p>
		</div>
	</div>
	<hr />
	<br />
	<script>
		function StatusChecker(event) {
			event.preventDefault();
			var status = $('#Status').val();
			if (status == 4 || status == 5) {
				$('#statusModal').modal('show');
			}
			else {
				$("#missionEditForm").submit();
			}
		}

		function dismissDialog() {
			$('#statusModal').modal('hide');
		}

		function submitForm() {
			$("#missionEditForm").submit();
		}
	</script>

	<div class="modal fade" id="statusModal" tabindex="-1" role="dialog" aria-labelledby="statusCheckerModal"
		 aria-hidden="true">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="statusCheckerModal">Are you sure you want to change the status to Cancelled/Completed?</h5>
					<button class="close" type="button" data-dismiss="modal" aria-label="Close" onclick="dismissDialog()">
						<span aria-hidden="true">×</span>
					</button>
				</div>
				<div class="modal-body">Changing status to Cancelled/Compeleted will prevent any changes inside the project, click cancel to go back and change the status and submit to proceed</div>
				<div class="modal-footer">
					<button class="btn btn-secondary" type="button" data-dismiss="modal" onclick="dismissDialog()">Cancel</button>
					<button class="btn btn-info" onclick="submitForm()">Submit</button>
				</div>
			</div>
		</div>
	</div>
	<div class="row justify-content-center">
		<div class="col-8">
			<form id="missionEditForm" asp-action="EdittingMission">
				<div asp-validation-summary="All" class="text-danger"></div>
				@Html.HiddenFor(x => x.SprintID)
				@Html.HiddenFor(x => x.MissionID)
				<div class="form-group">
					<label asp-for="Name" class="label-control"></label>
					<input asp-for="Name" class="form-control" />
					<span asp-validation-for="Name" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="MissionDescription" class="label-control"></label>
					<textarea asp-for="MissionDescription" class="form-control"></textarea>
					<span asp-validation-for="MissionDescription" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label class="label-control">Member</label>
					<select class="form-control" name="TeamMemberID">
						@foreach (var member in (List<TeamMember>)ViewBag.members)
						{
							if (Model.TeamMemberID == member.Id)
							{
								<option selected value="@member.Id">@member.UserName</option>

							}
							else
							{
								<option value="@member.Id">@member.UserName</option>
							}
						}
					</select>
				</div>
				<div class="form-group">
					<label class="label-control">Status</label>
					<select id="Status" class="form-control" name="StatusID">
						@foreach (var status in (List<Status>)ViewBag.Statuses)
						{

							if (Model.StatusID == status.StatusID)
							{
								<option selected value="@status.StatusID">@status.Name</option>
							}
							else
							{
								<option value="@status.StatusID">@status.Name</option>
							}

						}
					</select>
				</div>
				<button type="submit" value="Update" class="btn btn-outline-info" onclick="StatusChecker(event)">Update</button>
			</form>
		</div>
	</div>
</div>